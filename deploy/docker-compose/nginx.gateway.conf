server {
    listen 80;
    listen 443 ssl;
    http2 on;
    server_name localhost;

    # SSL configuration (only used when listening on 443)
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Common settings
    client_max_body_size 10m;
    client_body_buffer_size 1K;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 16k;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "no-referrer-when-downgrade";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    ssi off;
    server_tokens off;

    # ACME challenge endpoint for Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /etc/nginx/ssl;
    }

    location / {
        if ($scheme = http) {
            if (-f /etc/nginx/ssl/cert.pem) {
                return 301 https://$server_name$request_uri;
            }
        }

        proxy_pass http://openops-app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # --- AI Streaming-specific settings ---
        proxy_buffering off;
        proxy_cache off;
        chunked_transfer_encoding on;
    }

    location /api/socket.io {
        if ($scheme = http) {
            if (-f /etc/nginx/ssl/cert.pem) {
                return 301 https://$server_name$request_uri;
            }
        }

        proxy_pass http://openops-app/socket.io;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /openops-analytics {
        if ($scheme = http) {
            if (-f /etc/nginx/ssl/cert.pem) {
                return 301 https://$server_name$request_uri;
            }
        }

        proxy_pass http://openops-analytics:8088;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /openops-tables/ws/core {
        if ($scheme = http) {
            if (-f /etc/nginx/ssl/cert.pem) {
                return 301 https://$server_name$request_uri;
            }
        }

        proxy_pass http://openops-tables/openops-tables/ws/core;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /openops-tables {
        if ($scheme = http) {
            if (-f /etc/nginx/ssl/cert.pem) {
                return 301 https://$server_name$request_uri;
            }
        }

        client_max_body_size 512m;
        proxy_pass http://openops-tables;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
