global:
  version: "latest"

image:
  repository: public.ecr.aws/openops
  pullPolicy: IfNotPresent

openopsEnv:
  OPS_PUBLIC_URL: "http://openops.example.com"
  OPS_FRONTEND_URL: "{{ .Values.openopsEnv.OPS_PUBLIC_URL }}"
  OPS_ENVIRONMENT: "prod"
  OPS_ENVIRONMENT_NAME: "helm"
  OPS_TRIGGER_DEFAULT_POLL_INTERVAL: "1"
  OPS_WEBHOOK_TIMEOUT_SECONDS: "30"
  OPS_BLOCKS_SOURCE: FILE
  OPS_BLOCKS_SYNC_MODE: NONE
  OPS_NGINX_CONFIG_FILE: nginx.gateway.conf
  OPS_VERSION: "{{ .Values.global.version }}"
  OPS_OPENOPS_TABLES_VERSION: "{{ .Values.tables.tag }}"
  OPS_ANALYTICS_VERSION: "{{ .Values.analytics.tag }}"

  # Authentication
  OPS_API_KEY: "api-key"
  OPS_ENCRYPTION_KEY: abcdef123456789abcdef123456789ab
  OPS_JWT_SECRET: please-change-this-secret
  OPS_OPENOPS_ADMIN_EMAIL: admin@openops.com
  OPS_OPENOPS_ADMIN_PASSWORD: please-change-this-password-1

  # Telemetry
  OPS_LOG_LEVEL: info
  OPS_LOG_PRETTY: "false"
  OPS_TELEMETRY_MODE: COLLECTOR
  OPS_TELEMETRY_COLLECTOR_URL: https://telemetry.openops.com/save

  # Engine
  OPS_ENGINE_URL: '{{ include "openops.engineServiceUrl" . }}/execute'
  OPS_EXECUTION_MODE: SANDBOX_CODE_ONLY

  # Queue
  OPS_QUEUE_MODE: REDIS
  OPS_REDIS_HOST: '{{ include "openops.redisHost" . }}'
  OPS_REDIS_PORT: '{{ include "openops.redisPort" . }}'

  # Database
  OPS_DB_TYPE: POSTGRES
  OPS_POSTGRES_DATABASE: openops
  OPS_POSTGRES_HOST: '{{ include "openops.postgresHost" . }}'
  OPS_POSTGRES_PORT: '{{ include "openops.postgresPort" . }}'
  OPS_POSTGRES_USERNAME: postgres
  OPS_POSTGRES_PASSWORD: please-change-this-password-1

  # Tables
  OPS_OPENOPS_TABLES_DATABASE_NAME: tables
  OPS_OPENOPS_TABLES_API_URL: '{{ include "openops.tablesServiceUrl" . }}'
  OPS_OPENOPS_TABLES_PUBLIC_URL: "{{ .Values.openopsEnv.OPS_PUBLIC_URL }}"
  OPS_TABLES_TOKEN_LIFETIME_MINUTES: "60"
  OPS_JWT_TOKEN_LIFETIME_HOURS: "168"
  OPS_MAX_CONCURRENT_TABLES_REQUESTS: "100"
  OPS_OPENOPS_TABLES_DB_HOST: '{{ include "openops.postgresHost" . }}'

  # Analytics
  OPS_ANALYTICS_PUBLIC_URL: "{{ .Values.openopsEnv.OPS_PUBLIC_URL }}"
  OPS_ANALYTICS_PRIVATE_URL: '{{ include "openops.analyticsServiceUrl" . }}'
  OPS_ANALYTICS_ADMIN_PASSWORD: please-change-this-password-1
  ANALYTICS_POWERUSER_PASSWORD: please-change-this-password-1
  ANALYTICS_ALLOW_ADHOC_SUBQUERY: "true"

  # AWS
  OPS_AWS_ENABLE_IMPLICIT_ROLE: "false"

  # Blocks custom settings
  OPS_CODE_BLOCK_MEMORY_LIMIT_IN_MB: "256"
  OPS_SLACK_APP_SIGNING_SECRET: ""
  OPS_SLACK_ENABLE_INTERACTIONS: "true"


app:
  name: openops-app
  image: openops-app
  replicas: 1

engine:
  name: openops-engine
  image: openops-engine
  replicas: 1
  env:
    OPS_BASE_CODE_DIRECTORY: /tmp/codes
    OPS_SERVER_API_URL: '{{ printf "%s/api/" (include "openops.appServiceUrl" .) }}'

tables:
  name: openops-tables
  image: openops-tables
  tag: "0.2.6"
  replicas: 1
  env:
    BASEROW_PUBLIC_URL: "{{ .Values.openopsEnv.OPS_OPENOPS_TABLES_PUBLIC_URL }}"
    BASEROW_PRIVATE_URL: "{{ .Values.openopsEnv.OPS_OPENOPS_TABLES_API_URL }}"
    BASEROW_EXTRA_ALLOWED_HOSTS: '*'
    SECRET_KEY: "{{ .Values.openopsEnv.OPS_ENCRYPTION_KEY }}"
    BASEROW_JWT_SIGNING_KEY: "{{ .Values.openopsEnv.OPS_JWT_SECRET }}"
    BASEROW_ADMIN_USERNAME: "{{ .Values.openopsEnv.OPS_OPENOPS_ADMIN_EMAIL }}"
    BASEROW_ADMIN_PASSWORD: "{{ .Values.openopsEnv.OPS_OPENOPS_ADMIN_PASSWORD }}"
    BASEROW_REFRESH_TOKEN_LIFETIME_HOURS: "{{ .Values.openopsEnv.OPS_JWT_TOKEN_LIFETIME_HOURS }}"
    BASEROW_ACCESS_TOKEN_LIFETIME_MINUTES: "{{ .Values.openopsEnv.OPS_TABLES_TOKEN_LIFETIME_MINUTES }}"
    SYNC_TEMPLATES_ON_STARTUP: 'false'
    MIGRATE_ON_STARTUP: 'true'
    DISABLE_VOLUME_CHECK: 'yes'
    DATABASE_NAME: "{{ .Values.openopsEnv.OPS_OPENOPS_TABLES_DATABASE_NAME }}"
    DATABASE_HOST: "{{ .Values.openopsEnv.OPS_POSTGRES_HOST }}"
    DATABASE_PORT: "{{ .Values.openopsEnv.OPS_POSTGRES_PORT }}"
    DATABASE_USER: "{{ .Values.openopsEnv.OPS_POSTGRES_USERNAME }}"
    DATABASE_PASSWORD: "{{ .Values.openopsEnv.OPS_POSTGRES_PASSWORD }}"
    REDIS_URL: '{{ include "openops.redisUrl" . }}'
  storage:
    size: 10Gi
    storageClass: ""

analytics:
  name: openops-analytics
  image: openops-analytics
  tag: "0.14.1"
  replicas: 1
  env:
    ADMIN_PASSWORD: "{{ .Values.openopsEnv.OPS_ANALYTICS_ADMIN_PASSWORD }}"
    POWERUSER_PASSWORD: "{{ .Values.openopsEnv.ANALYTICS_POWERUSER_PASSWORD }}"
    GUNICORN_LOGLEVEL: 'debug'
    DATABASE_DIALECT: 'postgresql'
    DATABASE_DB: 'analytics'
    DATABASE_HOST: "{{ .Values.openopsEnv.OPS_POSTGRES_HOST }}"
    DATABASE_PORT: "{{ .Values.openopsEnv.OPS_POSTGRES_PORT }}"
    DATABASE_USER: "{{ .Values.openopsEnv.OPS_POSTGRES_USERNAME }}"
    DATABASE_PASSWORD: "{{ .Values.openopsEnv.OPS_POSTGRES_PASSWORD }}"
    DATABASE_HOST_ALT: "{{ .Values.openopsEnv.OPS_OPENOPS_TABLES_DB_HOST }}"
    SUPERSET_SECRET_KEY: "{{ .Values.openopsEnv.OPS_ENCRYPTION_KEY }}"
    SUPERSET_FEATURE_ALLOW_ADHOC_SUBQUERY: '"{{ .Values.openopsEnv.ANALYTICS_ALLOW_ADHOC_SUBQUERY }}"'

postgres:
  name: postgres
  image: postgres
  tag: "14.4"
  replicas: 1
  env:
    maxConnections: "300"
    POSTGRES_USER: "{{ .Values.openopsEnv.OPS_POSTGRES_USERNAME }}"
    POSTGRES_PASSWORD: "{{ .Values.openopsEnv.OPS_POSTGRES_PASSWORD }}"
    POSTGRES_DB: "{{ .Values.openopsEnv.OPS_POSTGRES_DATABASE }}"
  storage:
    size: 20Gi
    storageClass: ""
  service:
    port: 5432

redis:
  name: redis
  image: redis
  tag: "7.4.0"
  replicas: 1
  storage:
    size: 5Gi
    storageClass: ""
  service:
    port: 6379

nginx:
  name: nginx
  image: nginx
  tag: "1.27.4"
  replicas: 1
  service:
    port: 80
    type: LoadBalancer

